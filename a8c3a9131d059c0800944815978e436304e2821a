Revision: a8c3a9131d059c0800944815978e436304e2821a
Patch-set: 1
File: base/include/android-base/properties.h

21:12-21:18
Thu Sep 22 00:00:19 2016 +0000
Author: Josh Gao <1079148@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 300b1fab_676c1200
Bytes: 179
Given the recent __ANDROID__ vs __BIONIC__ cleanups, this error doesn't match the ifdef. It seems like we'll want at least a stub system properties implementation for host bionic?

21:12-21:18
Thu Sep 22 00:11:26 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 300b1fab_676c1200
UUID: 300b1fab_471b4e8a
Bytes: 72
duh, meant to say __BIONIC__. going to be a hard habit to get out of ...

29
Thu Sep 22 16:54:07 2016 +0000
Author: Felipe Leme <1013984@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 300b1fab_1b2b6bef
Bytes: 314
I know these commands are kind of obvious, but I would document them.

For exmaple, looking at both, my first doubt was does SetProperty returns a boolean and GetProperty doesn't? It would be nice it does (so I know whether the property exist or not), but I guess that's not possible due to how it's implemented...

File: base/properties.cpp

27
Thu Sep 22 00:00:19 2016 +0000
Author: Josh Gao <1079148@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 300b1fab_47690eee
Bytes: 171
But we don't pass that on to the caller?

Properties with an empty value can exist, right? If so, should this return a bool instead, denoting whether a property was found?

27
Thu Sep 22 00:11:26 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 300b1fab_47690eee
UUID: 300b1fab_a70c4a4e
Bytes: 391
as you can see, i was a bit confused on that point myself. yes, they can. but the existing APIs (other than doing what you see here) don't let you tell the difference. i'm not sure whether that difference is useful: setting a default seems to be the actual usual intent.

i think just replacing this comment with something like "if unset, leave `value` so it can serve as a default" is fine.

27
Thu Sep 22 00:30:03 2016 +0000
Author: Josh Gao <1079148@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 300b1fab_a70c4a4e
UUID: 300b1fab_276dfac1
Bytes: 186
The following seems a bit surprising, though:

    SetProperty("foo", "");
    std::string bar = "bar";
    GetProperty("foo", &bar);

Also, the comment should probably go in the header.

27
Thu Sep 22 01:38:25 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 300b1fab_276dfac1
UUID: 300b1fab_c7a73ebf
Bytes: 419
what seems surprising? it's perhaps not how i'd have designed system properties myself, but then i think i'd have done just about *everything* differently. but this seems consistent with how they've always worked to me.

if we find a caller who'd use the bool we can always change later. but i don't think anyone's ever needed it yet. (not least because you can't delete a property. so 'empty' is a fairly usual state.)

