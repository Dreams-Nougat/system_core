Revision: 8e28a079902983c16015a0b1155153c13c2339a3
Patch-set: 3
File: include/nativebridge/native_bridge.h

151:0-163:52
Mon May 04 10:15:55 2015 +0000
Author: Eric Lin <1051588@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 706d52b3_7616cefc
Bytes: 76
So, for signals other than SIGSEGV, native bridge can still use sigaction()?

151:0-163:52
Mon May 04 15:03:33 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 706d52b3_7616cefc
UUID: f06142bc_74688120
Bytes: 196
The question is are there other important ones? If so, please describe a range that you think covers acceptable use cases.

I thought only SIGSEGV would be important. Everything else, not so much.

151:0-163:52
Tue May 05 02:36:11 2015 +0000
Author: Eric Lin <1051588@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06142bc_74688120
UUID: 706d52b3_b9bdb7fb
Bytes: 446
I mean: Native bridge registers signal handler on behalf of apps code  native bridge is OK to use sigaction? 

A further discussion, how should native bridge decide which signal to use sigaction, and which one not? Can it assumes ART only call getSignalHandler(SIGSEGV), thus sigaction() all other signal handlers? (to prevent future ART changes from breaking it, native bridge can return NULL on getSignalHandler for signals other then SIGSEGV).

151:0-163:52
Tue May 05 03:30:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 706d52b3_b9bdb7fb
UUID: b0218a87_28396352
Bytes: 869
This is not intended to forbid the use of sigaction.

This API is for the cases when a native bridge would like the runtime to ensure that its handler is always first (after ART). If you are interested in other signals, and they don't have an ordering constraint like SIGSEGV, this isn't gonna force you to do it this way (libsigchain still accepts general sigaction...).

My original question was whether only SIGSEGV is enough. After talking with bdc, we'll likely remove the SIGSEGV restriction, and ART will just query the whole range supported by libsigchain (where this prioritization will be implemented). If you don't want it handled, simply return null for those signals and call sigaction yourself. Same goes for any additional handlers you want installed - just call sigaction normally, and they'll be in the normal chain.

Does this sound reasonable to you?

151:0-163:52
Tue May 05 05:30:24 2015 +0000
Author: Eric Lin <1051588@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0218a87_28396352
UUID: 504a0e43_f90ac8a6
Bytes: 25
Yes, sounds good. thanks.

