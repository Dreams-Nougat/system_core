Revision: 0f89af5301a4c854d76cf5f11c208cd4326b5a19
Patch-set: 1
File: debuggerd/Android.mk

60:13-60:25
Thu Jun 16 17:11:38 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d4162500_7bba10d3
Bytes: 26
why isn't it using liblog?

60:13-60:25
Fri Jun 17 01:04:17 2016 +0000
Author: Josh Gao <1079148@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d4162500_7bba10d3
UUID: a92eb88e_317da8cd
Bytes: 132
Logging happens inside of a signal handler, and liblog doesn't seem to be async signal safe. ("Do not use LOG in a signal handler.")

60:13-60:25
Fri Jun 17 03:51:46 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a92eb88e_317da8cd
UUID: a92eb88e_51b0340c
Bytes: 88
do we have any reason to believe libc_logging is any safer? they both do the same thing.

60:13-60:25
Fri Jun 17 18:39:48 2016 +0000
Author: Josh Gao <1079148@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a92eb88e_51b0340c
UUID: 49affc8f_38fa0917
Bytes: 400
From inspection, the only thing I can see in libc_logging that's not standards compliant is a use of pthread_mutex_trylock, which should be safe with our implementation.

liblog does lots of stuff that could be problematic. The first log write does a mutex lock (probably not a problem for the linker, possibly a problem for other users), it calls malloc and mmap to allocate an event tag cache, etc.

File: debuggerd/include/debuggerd/client.h

43:0-43:40
Thu Jun 16 02:17:10 2016 +0000
Author: Christopher Ferris <1019050@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d4162500_0ede3f16
Bytes: 267
You removed this comment:

// NOTE: Any changes to this structure must also be reflected in
//       bionic/linker/debugger.cpp.

Given that comment, maybe it would be better to move this to a header file exported by the linker itself, then to always have two copies.

43:0-43:7
Thu Jun 16 17:11:38 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d4162500_fbe2a0db
Bytes: 90
re: typedefs in this file --- do we have any C clients left, or can we make this C++-only?

43:0-43:40
Thu Jun 16 20:14:01 2016 +0000
Author: Josh Gao <1079148@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d4162500_0ede3f16
UUID: d4162500_1e614a91
Bytes: 451
(replying to the comment on the other CL here for convenience)

 > I didn't see that you were moving this into debuggerd at first. I
 > think you should move this the other way around. Having the bionic
 > linker depend on debuggerd seems bad, but having debuggerd depend
 > on the bionic linker seems okay.

I'm not very attached to the location of the library, but this way seemed cleaner to me since it keeps the client and server in the same repo.

43:0-43:7
Thu Jun 16 20:14:01 2016 +0000
Author: Josh Gao <1079148@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d4162500_fbe2a0db
UUID: d4162500_be6bf670
Bytes: 139
AFAIK, just cutils. I held off on moving that into libdebuggerd_client until I knew for sure that it'd be going here instead of the linker.

43:0-43:7
Thu Jun 16 20:19:11 2016 +0000
Author: Christopher Ferris <1019050@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d4162500_be6bf670
UUID: d4162500_7e203e40
Bytes: 213
The reason I thought it might be better in linker is that it reduces the number of external dependencies that bionic has. However, since debuggerd and the linker are so intertwined, it might not make a difference.

43:0-43:7
Fri Jun 17 00:09:31 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d4162500_7e203e40
UUID: a92eb88e_eed61f5a
Bytes: 389
yeah, and it seems like we'd be more likely to change the debuggerd side of things than the libc interface, so having the library here in debuggerd should make any future changes easier. (and moving the libcutils API into here in a future change sounds like a good cleanup, whereas moving that into the linker... ugh!)

we might want to put a version number in the debugger_msg_t though...

File: include/cutils/debugger.h

31
Thu Jun 16 17:11:38 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d4162500_7bcfb05b
Bytes: 84
seems like this stuff should be in a libdebuggerd_client library rather than cutils?

