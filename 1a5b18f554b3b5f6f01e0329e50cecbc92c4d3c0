Revision: 1a5b18f554b3b5f6f01e0329e50cecbc92c4d3c0
Patch-set: 9
File: init/action.cpp

139:12-139:37
Wed Jul 29 03:50:25 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d11d20b_3a91995b
Bytes: 25
property_triggers.empty()

139:12-139:37
Wed Jul 29 17:20:40 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8d11d20b_3a91995b
UUID: 2af28c55_a0915a27
Bytes: 7
Will do

File: init/action.h

26:4-26:29
Wed Jul 29 03:50:25 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d06c2cf_807b3ce3
Bytes: 128
How about providing more interface in Action and remove this? like adding command_count() and execute_one_command(size_t index)?

26:4-26:29
Wed Jul 29 17:20:40 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d06c2cf_807b3ce3
UUID: 8a00d8f0_1bf07b88
Bytes: 224
I don't want to expose that functionality to anything except for ActionQueue however, so a friend class seemed to be the best.  Let me think through this.  I can move some of the logic from execute_one_command() into Action.

77:4-77:23
Wed Jul 29 03:50:25 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d11d20b_9a226dd7
Bytes: 76
use vector here and in other places, as vector is more simple to understand?

77:4-77:23
Wed Jul 29 17:20:40 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8d11d20b_9a226dd7
UUID: caf6504b_bd173f53
Bytes: 7
Will do

83:24-83:35
Wed Jul 29 03:50:25 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2db8e63c_a43c7a80
Bytes: 121
which style do you insist on? this likes java method? and others like unix functions? and google prefers AddTableEntry().

83:24-83:35
Wed Jul 29 17:20:40 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2db8e63c_a43c7a80
UUID: 2af28c55_40a84e5f
Bytes: 363
I've been keeping with the existing unix style since that's how the rest of init is/has been.  This one got away from me when typing, and I do need to fix up a reasonable number of style issues throughout.

Do we prefer AddTableEntry() for init even though the legacy code is add_table_entry()?  Should we mix now with the intention of cleaning up the rest later?

83:24-83:35
Wed Jul 29 17:32:38 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2af28c55_40a84e5f
UUID: 2af28c55_c0269e69
Bytes: 177
yeah, we're assuming that -- though it may take 10 years -- eventually this [that is: most of system/core] will be chrome style, and we're trying to fix stuff up as we touch it.

88:9-88:28
Wed Jul 29 03:50:25 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d06c2cf_e08b186f
Bytes: 110
queue_action_triggered_by_event?
queue_action_triggered_by_property?
queue_action_triggered_by_all_properties?

88:9-88:28
Wed Jul 29 17:20:40 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d06c2cf_e08b186f
UUID: 2af28c55_608c7211
Bytes: 228
queue_property_trigger() and queue_all_property_triggers() match the legacy names.  'queue_actions' would be better too, since we can have multiple actions queued for a given trigger due to &&, but I'm not sure about the rename.

99:4-99:35
Wed Jul 29 03:50:25 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4db19a56_20d4f4b5
Bytes: 157
I think ActionQueue takes too much responsibilities, feels like ActionManager. How about moving action_list/parse_action/dump_parse_state out of ActionQueue.

99:4-99:35
Wed Jul 29 17:20:40 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4db19a56_20d4f4b5
UUID: 4a142033_59284388
Bytes: 175
I agree that ActionManager is a better name.  

What would I move action_list/parse_action/dump_parse_state into?  Should I have separate ActionManager vs ActionQueue classes?

File: init/builtins.cpp

517:4-517:26
Wed Jul 29 03:50:25 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eda16e0d_c8b43372
Bytes: 22
indent here and below?

517:4-517:26
Wed Jul 29 17:20:40 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: eda16e0d_c8b43372
UUID: caf6504b_7d23f7af
Bytes: 7
Will do

