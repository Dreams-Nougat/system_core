Revision: d935df1ac246382ed8b83b32f59dd246a540ee34
Patch-set: 1
File: adb/commandline.cpp

466:4-466:12
Thu Apr 30 18:11:06 2015 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70f8f2fa_93c0a79a
Bytes: 98
Looks like this should actually be int (or both it and the parameter should be changed to size_t).

466:4-466:12
Thu Apr 30 18:26:02 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70f8f2fa_93c0a79a
UUID: 70f8f2fa_4e583612
Bytes: 105
Windows :-(

changed the parameter to 'unsigned' though, since that's what the calling code is passing...

466:4-466:12
Thu Apr 30 20:06:04 2015 +0000
Author: Chris Palmer <1004692@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70f8f2fa_4e583612
UUID: 300cbaed_f6c8f02a
Bytes: 225
Windows does have size_t. It should work. (And size_t is the right type. But unsigned is better than signed, but now you're casting signed to unsigned, which might be surprising (negative values become large positive values).

466:4-466:12
Thu Apr 30 20:33:07 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 300cbaed_f6c8f02a
UUID: 70f8f2fa_f01f5c14
Bytes: 450
it's not the lack of the size_t *type* that causes us problems --- it's that %zd doesn't work, so using size_t for parameters tends to lead to pain in adb.

we also have the unfortunate situation where all the tools are built for 64-bit Linux (and Mac OS) but 32-bit Windows. (and we don't even know what fraction of our users have 64-bit Windows.) so size_t leads to different limits on Windows vs Linux. (and Linux is the only place we test, so...)

563:17-563:20
Thu Apr 30 18:11:06 2015 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 300cbaed_ca4c21d1
Bytes: 53
This looks to be 91 bytes larger than it needs to be.

563:17-563:20
Thu Apr 30 18:26:02 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 300cbaed_ca4c21d1
UUID: 90fd66eb_f942b06c
Bytes: 4
Done

