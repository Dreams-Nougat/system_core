Revision: da2e222805266700fccc203da9926510b2425dc8
Patch-set: 1
File: include/netutils/ifc.h

43
Wed Jun 30 19:18:32 2010 +0000
Author: Robert Greenwalt <1002609@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///LI=
Bytes: 152
Change to accept a string address.  No need for a v4 and a v6 interface.  Actually all the in_addr_t params in the header should change to const char *.

43
Thu Jul 01 21:18:36 2010 +0000
Author: Naveen K <1003413@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA0n///LI=
UUID: AAAA0n///Co=
Bytes: 365
The actual implementation of this function needs to know the address type. 

One way to find that out would be to invoke inet_pton() function with the address string and first argument set to AF_INET. If that returns 1, we know its an IPv4 address. If it returns 0 we can try the same function with AF_INET6 to check if it is an IPv6 address. Is there a better way?

43
Thu Jul 01 21:38:48 2010 +0000
Author: Robert Greenwalt <1002609@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA0n///Co=
UUID: AAAA0n///CQ=
Bytes: 969
Hmm.  Maybe you *should* pass an addr type at this level.  Trying to guess by parsing the string seems inefficient since we had the info before.  At some point above this (either NetworkUtils or the jni impl of NetworkUtils) you will be converting from InetAddress to a string or a byte array (see my question later in this comment.  There you can determine the type cheaply (length of array) and start passing the type.  Let's try to make that transition as late as convenient though - I'd prefer the c++ NetworkUtils impl.

As for the type constant, I think Lorenzo wanted you to use a pre-existing constant for v4 and v6 rather than making new.

For a single ifc_add_host function, is it easier to work with a byte array or string?  I know you can use the inet_pton function to generate a final form from the string, but do you know the format of the output?  If the byte array is the right final form for the address we should just use that and skip the conversion.

43
Thu Jul 01 21:48:48 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA0n///Co=
UUID: AAAA0n///BI=
Bytes: 465
Yes. Just call getnameinfo as soon as you get into C code. getnameinfo will parse the text string and return an address structure that contains both the family and the binary address form. You can then pass this around in C code.

Using getnameinfo also ensures that you will never need to define any address family constants, because C has its own constants (AF_INET and AF_INET6) and you'll never need to communicate address family information between C and Java.

44
Wed Jun 30 19:18:32 2010 +0000
Author: Robert Greenwalt <1002609@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///LE=
Bytes: 34
don't add a new function for this.

File: libnetutils/ifc_utils.c

49
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///OE=
Bytes: 56
Can you add a comment explaining why this needs to be 1?

50
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///OU=
Bytes: 80
Is it possible to use AF_INET instead of IPv4 and AF_INET6 instead of IPv6 here?

480
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///Nk=
Bytes: 291
What happens if the conversion from string to in6_addr fails? The function returns void, so there's no indication of error to the caller (since inet_pton does not touch its output value unless it succeeds).

This function should probably return an integer (e.g. 0 on success, -1 on failure).

488
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///No=
Bytes: 346
Looking at the inet_pton man page and the bionic/libc source code suggests that inet_pton returns 1 on success, 0 if the address is invalid, and -1 if the address family is invalid. Since this case cannot happen (AF_INET6 is a valid address family), just simplify the code to if (ret <=0) { printerr("inet_pton() failed: invalid address %s\n"); }

493
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///OM=
Bytes: 287
As per comments to the .h file, can you rename this to add_ipv6_route, make it take an "int prefixlen" parameter, and use that instead of IPv6_ADDR_LEN? You probably don't need to check that the 0 <= length <= 128, I expect the kernel will do that for you (but please make sure it does).

512
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///Nc=
Bytes: 302
If there is no IPv6 support in the kernel, this will fail. In that case, can you set errno to EAFNOSUPPORT? Something like this would probably work:

if (ifc_ctl_sock6 < 0) {
  errno = EAFNOSUPPORT;
  return -1;
}

(Otherwise errno will end up being set to EBADF, which is not going to help debugging.)

517
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///Ng=
Bytes: 117
This will change errno if it fails. Perhaps you can assign errno to a temporary variable before calling ifc_close6()?

535
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///NY=
Bytes: 56
inet_aton only returns 0 or 1. You can remove this case.

557
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///NU=
Bytes: 283
This code duplicates what you have above. Can you factor it out into a common add_ipv6_route method that takes ifindex, flags, and ipv6_addr as a parameter? That method could decide whether to populate rtmsg_gateway or rtmsg_dst based on whether flags has the RTF_GATEWAY bit or not.

557
Wed Jun 30 19:18:32 2010 +0000
Author: Robert Greenwalt <1002609@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA0n///NU=
UUID: AAAA0n///K0=
Bytes: 56
Or better, even collapse it in with the v4 versions too.

575
Wed Jun 30 09:33:19 2010 +0000
Author: Lorenzo Colitti <1000835@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA0n///NQ=
Bytes: 35
Can you rename addr_type to family?

