Revision: 18a06a207e2aedad71d761e5c462589396ec890f
Patch-set: 1
File: libsparse/include/sparse/sparse.h

73
Fri Feb 06 01:43:29 2015 +0000
Author: JP Abgrall <1005480@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c769c13_ac7247ca
Bytes: 118
After looking at some of the other changes needed in other projects ... 
A size_t seems more appropriate, or an off_t.

73
Fri Feb 06 05:47:51 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5c769c13_ac7247ca
UUID: bc879828_6c3693e4
Bytes: 158
the problem is our LP32 libc is fucked. both size_t and off_t (and time_t) are just 32 bits. if you need to handle > 2GiB on LP32, you'll need to use off64_t.

73
Fri Feb 06 21:37:30 2015 +0000
Author: JP Abgrall <1005480@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bc879828_6c3693e4
UUID: fcc030c1_6380c225
Bytes: 106
argh. So the 
   #define _LARGEFILE64_SOURCE
doesn't work as expected for off_t?
We use it in some places.

73
Sat Feb 07 03:45:28 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fcc030c1_6380c225
UUID: 71f62b4b_c2e90488
Bytes: 633
_LARGEFILE64_SOURCE is a no-op with bionic --- all it does is make the types and functions with 64 in their name (off64_t, lseek64, et cetera) available, and they're always available with bionic.

_FILE_OFFSET_BITS=64 is the one that should make off_t actually be off64_t and lseek be lseek64, but bionic doesn't have that. my concern is stdio, because that then effectively gives us two incompatible LP32 stdio ABIs (LP32 struct FILE contains 32-bit offsets), but i'll knock up a quick experiment that (a) makes _FILE_OFFSET_BITS=64 work for all the functions it can work for and (b) makes the troublesome functions fail to compile.

