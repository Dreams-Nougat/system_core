Revision: 8963a6ceec1a95555e8b6244f0a2b1b07e399af2
Patch-set: 3
File: init/init.c

854
Thu Mar 20 16:31:35 2014 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bc81454e_52ef7499
Bytes: 172
Might want to retain the fallback to /property_contexts if the selabel_open() fails on the /data/security/current/property_contexts so that we always have something loaded.

854
Thu Mar 20 17:40:39 2014 +0000
Author: Robert Craig <1013157@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bc81454e_52ef7499
UUID: 1c2df129_58fea184
Bytes: 539
What is the proper way to deal with a complete set of policy files that exists under /data/security/current with matching selinux_version file yet the selabel_open fails for some reason on the override property_contexts file? We would have sepolicy, file_contexts using the override yet the property context using the base. That seems error prone. Is this where a reboot into a recovery mode would happen?

Are we sure we don't want to tuck this inside libselinux? It would make handling certain issues much easier across all policy files.

854
Thu Mar 20 18:38:38 2014 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1c2df129_58fea184
UUID: 7c8b4d70_f3046a34
Bytes: 131
I would prefer that but IIRC Dima wanted it here due to the tight coupling between the init property service and property_contexts.

854
Thu Mar 20 19:31:20 2014 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7c8b4d70_f3046a34
UUID: 7c8b4d70_d3b4c6d7
Bytes: 128
I guess you can leave this alone and presume that libselinux will ensure that all files exist before selecting the /data policy.

