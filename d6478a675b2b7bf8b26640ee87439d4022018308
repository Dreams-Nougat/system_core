Revision: d6478a675b2b7bf8b26640ee87439d4022018308
Patch-set: 5
File: liblog/log_read.c

26:0-26:22
Fri May 02 21:54:56 2014 +0000
Author: Greg Hackmann <1015340@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4a66bc13_9f29f4aa
Bytes: 88
Is this safe to include?  I'm assuming from context that this builds in the Windows SDK.

26:0-26:22
Fri May 02 22:01:26 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4a66bc13_9f29f4aa
UUID: 0a8044c3_7cc51171
Bytes: 228
The recent pass to add using <sys/cdefs.h> was not tested on windows sdk build. I will have to hold off on declaring this (and some of the others) verified ... I am machine-cycle blocked at this moment to find out expeditiously.

26:0-26:22
Fri May 02 23:08:44 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0a8044c3_7cc51171
UUID: ea7cd0a5_98d7d9f7
Bytes: 431
Re-confirmed no breakages on any of the series of CLs for the win_sdk build.

The 'reason' this one is safe is because we are *now* building this file *only* for the target, and never for the host. With that said, the NOMINMAX is no longer necessary, but I reserve the right to keep it in should I reverse that decision (this needs to work for the fake logger at some time in the future, but will likely be a log_read_fake.c file?)

26:0-26:22
Mon May 05 16:26:06 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ea7cd0a5_98d7d9f7
UUID: 8aba749a_199af71a
Bytes: 137
Re-re-confirmed with a clean out tree in aosp win_sdk build, discovered there *is* a breakage by including sys/cdefs.h. Dropping include.

