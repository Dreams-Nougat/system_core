Revision: bed55839655866b93e7f1b08d5705214b096da36
Patch-set: 3
File: logd/LogReader.cpp

193
Mon Mar 31 18:00:59 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f94bcf71_81b40dd8
Bytes: 163
I don't think we should be suggesting this, even for debugging.  The shell already has to be running as root, so logd should be able to write to /dev/socket as is.

193
Mon Mar 31 18:29:45 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f94bcf71_81b40dd8
UUID: 3929e785_e28e2ed7
Bytes: 88
No choice, logd reduces itself to AID_LOGD and can no longer add sockets to /dev/socket.

197
Mon Mar 31 18:00:59 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f9a02f5c_1c8175a2
Bytes: 62
logd should be able to do this itself if it created the socket

197
Mon Mar 31 18:29:45 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f9a02f5c_1c8175a2
UUID: 5944db56_1e52b12c
Bytes: 49
By the time the threads are started, too late ...

198
Mon Mar 31 18:00:59 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f9a02f5c_9c16e5a4
Bytes: 52
if its 755, why do you care what the owner/group is?

198
Mon Mar 31 18:29:45 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f9a02f5c_9c16e5a4
UUID: 1926e3b5_d6c41a52
Bytes: 46
the sockets themselves are not created 755 ...

200
Mon Mar 31 18:00:59 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f9a02f5c_dcceadf8
Bytes: 156
why are you bothering re-enabling selinux?  I would expect this mostly to be used to run gdb or valgrind on logd, and you probably won't care about selinux.

200
Mon Mar 31 18:29:45 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f9a02f5c_dcceadf8
UUID: 5944db56_de43095f
Bytes: 127
Because one should, pedantically, require everything to be 'normal' when testing. The developer can choose to ignore this line.

200
Mon Mar 31 21:33:45 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5944db56_de43095f
UUID: b9d157e4_75746256
Bytes: 927
Inspected regarding the dropping/annealing of privileges, and SCHED_BATCH, CAP_SYSLOG and PR_SET_KEEPCAPS had no equivalent in init. I could however, drop the setuid/setgid calls in favor of adjustments in init.rc.

valgrind usage is full of problems itself though ...
1) turn off error checking in drop_privs in logd/main.cpp because of unknown system call warnings.
2) Other unknown system calls breaking selinux auditd code
3) /system/lib64/memcheck-arm64-linux is 644 and should be 755 when installed.

We have to disable logd startup as well in order to 'break in'

After workaround, minimal valgrind shell commands for startup:
1) setenforce 0
2) chmod 777 /dev/socket (if we do not drop setuid/setgid)
3) valgrind /system/bin/logd

The provided script is to represent the pedantic startup so that all security systems are running normally, and was meant as living proof that we could start up logd in the proper context.

200
Mon Mar 31 22:09:19 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9d157e4_75746256
UUID: 39ae4766_c9c1f571
Bytes: 323
SCHED_BATCH requires some permissions, although CAP_SYS_NICE is probably enough to set it.  I'm not sure why logd would need CAP_SYSLOG, I think that just allows access to /proc/kmsg (does it log errors to /proc/kmsg?).  It may be easier to keep the setuid in logd than to try to get all the right capabilities set in init.

200
Mon Mar 31 22:33:44 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 39ae4766_c9c1f571
UUID: 79db5f06_7610e81d
Bytes: 710
Nick had CAP_SYSLOG, left mindlessly, figured it started out its life because the kernel space logger checks this in the caller. I now need it to read the kernel dmesg buffer klogctl and then to be auditd to mine it for existing selinux audit messages to populate the log.

So, you are correct regarding the statement that we were doing some root-privilege stuff. Setting all these other fiddly bits requires root, AID_LOGD is set after they are all configured.

So, given your recant on moving setuid/setgid from logd to init; how minimalist should I be for the sample instructions to manually start logd? (one option is to completely remove them from fprintf, and merely document it in main.cpp as a comment?

