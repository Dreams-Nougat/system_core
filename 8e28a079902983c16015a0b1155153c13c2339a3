Revision: 8e28a079902983c16015a0b1155153c13c2339a3
Patch-set: 3
File: include/nativebridge/native_bridge.h

151:0-163:52
Mon May 04 10:15:55 2015 +0000
Author: Eric Lin <1051588@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 706d52b3_7616cefc
Bytes: 76
So, for signals other than SIGSEGV, native bridge can still use sigaction()?

151:0-163:52
Mon May 04 15:03:33 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 706d52b3_7616cefc
UUID: f06142bc_74688120
Bytes: 196
The question is are there other important ones? If so, please describe a range that you think covers acceptable use cases.

I thought only SIGSEGV would be important. Everything else, not so much.

151:0-163:52
Tue May 05 02:36:11 2015 +0000
Author: Eric Lin <1051588@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06142bc_74688120
UUID: 706d52b3_b9bdb7fb
Bytes: 446
I mean: Native bridge registers signal handler on behalf of apps code  native bridge is OK to use sigaction? 

A further discussion, how should native bridge decide which signal to use sigaction, and which one not? Can it assumes ART only call getSignalHandler(SIGSEGV), thus sigaction() all other signal handlers? (to prevent future ART changes from breaking it, native bridge can return NULL on getSignalHandler for signals other then SIGSEGV).

