Revision: 0007e9b7858d34b477cde51cc4ab4890d8fe2430
Patch-set: 1
File: fastboot/Android.mk

59:4-59:13
Fri Jan 15 18:42:42 2016 +0000
Author: David Pursell <1078119@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 274e5eac_f765101f
Bytes: 307
I'm a little nervous about this because http://r.android.com/182080 tried this and apparently caused some breakage.

However I can't seem to replicate the failure, I cleaned my build then ran both `m checkbuild` and `lunch sdk-eng; make -j40 win_sdk` without problem.

Is there any other build I should try?

59:4-59:13
Fri Jan 15 21:29:08 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 274e5eac_f765101f
UUID: 274e5eac_428a4401
Bytes: 95
i remember cleaning up some gettid stuff, so maybe i just never came back to revert the revert?

59:4-59:13
Fri Jan 15 22:19:24 2016 +0000
Author: David Pursell <1078119@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 274e5eac_428a4401
UUID: 07495aa4_138a52d2
Bytes: 331
Looks like the un-revert is at http://r.android.com/182090, but it doesn't contain the fastboot dependency on libcutils because you moved gettid to libbase.

If it was in fact a fastboot dependency on libcutils causing the build breakage, it might show up again here, I just can't figure out how to replicate it if that's the case.

59:4-59:13
Fri Jan 15 22:59:32 2016 +0000
Author: Spencer Low <1065256@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 07495aa4_138a52d2
UUID: 274e5eac_42ac0408
Bytes: 95
For Win32, gettid() is no longer called in logging.cpp, so the old problem shouldn't come back.

File: include/cutils/sockets.h

141
Fri Jan 15 21:29:08 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e759a674_6227785b
Bytes: 32
so maybe it shouldn't be public?

141
Fri Jan 15 22:19:24 2016 +0000
Author: David Pursell <1078119@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e759a674_6227785b
UUID: 274e5eac_a247c833
Bytes: 50
Yeah I think you're right, I'll move it elsewhere.

File: libcutils/socket_inaddr_any_server.c

74:7-74:31
Fri Jan 15 22:59:32 2016 +0000
Author: Spencer Low <1065256@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 676db610_339e7427
Bytes: 208
General comment: diagnosability of this code in case any API call fails? I tried to make the networking code in sysdeps_win32.cpp log/trace/etc. failures and to make it clear exactly what API is failing, etc.

79:41-79:42
Fri Jan 15 22:59:32 2016 +0000
Author: Spencer Low <1065256@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 07495aa4_33330ecc
Bytes: 289
In sysdeps_win32.cpp, I always specified this last param just in case it fixes some problem with antivirus or proxy client DLLs. I dunno if it matters though. FWIW, Chromium seems to always specify this param. I'm ok with 0 if you're going to be debugging any Windows networking issues. :)

File: libcutils/socket_network_client.c

146:4-146:15
Fri Jan 15 22:59:32 2016 +0000
Author: Spencer Low <1065256@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 274e5eac_a24a2801
Bytes: 95
I see that you're already checking the returned pointer, but maybe check the return value also?

File: libcutils/tests/sockets_test.cpp

44:17-44:25
Fri Jan 15 19:37:57 2016 +0000
Author: David Pursell <1078119@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 87562a44_e987f780
Bytes: 115
Small change needed for Mac, recvfrom() behaves differently on TCP sockets. Will put the fix in the next patch set.

