Revision: 0790494c3ac95c278cdf2b9a460459dc7ee3990b
Patch-set: 3
File: logd/LogWhiteBlackList.cpp

80:15-80:36
Wed Sep 30 00:27:52 2015 +0000
Author: Andres Morales <1038928@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f86a1765_33a99ac0
Bytes: 16
nit: strcmp == 0

84:4-84:6
Wed Sep 30 00:27:52 2015 +0000
Author: Andres Morales <1038928@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ee86cdd4_d258c423
Bytes: 8
else if?

84:4-84:6
Wed Sep 30 16:55:06 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee86cdd4_d258c423
UUID: d55b5e6b_fc5185ff
Bytes: 7
will do

88:9-88:15
Wed Sep 30 00:27:52 2015 +0000
Author: Andres Morales <1038928@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4e4c398b_3d920e16
Bytes: 123
why does this need to be a string? you just use it as a c_str below and you incur copy constructors assigning char[] to it.

88:9-88:15
Wed Sep 30 16:55:06 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4e4c398b_3d920e16
UUID: 75439281_615dd064
Bytes: 21
See below. No 'need'.

95:8-95:14
Wed Sep 30 00:27:52 2015 +0000
Author: Andres Morales <1038928@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 15197672_16661aad
Bytes: 102
you could store this in a char * to avoid the conversion cost since you may just throw this out below.

95:8-95:14
Wed Sep 30 16:55:06 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 15197672_16661aad
UUID: b5398a03_20baaa3b
Bytes: 600
I would need to strdup it, in order to use it in the following property_get(); or resort to using double the amount of stack for two PROPERTY_VALUE_MAX buffers.

In the first case I would incite the wrath of the C++ gohds, in the second case get arrested for stack abuse ;-}. This was my reasoning for using std::string.

std::string does optimize to move, so the copy constructor is not triggered in most cases; and it greatly reduces the risk for allocation management when we get out of scope.

In the future, the char * being handed to this function may be replaced with std::string reference ...

98:13-98:38
Wed Sep 30 00:27:52 2015 +0000
Author: Andres Morales <1038928@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f86a1765_1383363e
Bytes: 16
nit: strcmp != 0

98:13-98:38
Wed Sep 30 16:55:06 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f86a1765_1383363e
UUID: 15a33681_e3d0926d
Bytes: 1016
TL;DR

Please, no sugar in my coffee.

In Android, there is no specification for either form, utilizing strcmp (or other zero or none-zero functions, methods or vars) results as a boolean, or checking if equal or not equal to 0. We can use either. One will find that there are significantly more cases of !strcmp() than strcmp() == 0 in the source tree in Android, and thus why I chose to use the prevailing form. NB: bionic library is the exception, they tend to use the equal form (BSD).

My first introduction to being reviewed here also showed that bias, I was instructed to please use the shorter/sweeter boolean form.

This is also the case for Linux regarding lack of coding standard, and a bias towards treating strcmp and its ilk as a boolean.

I have used this boolean form exclusively in logd, so to change this to == 0 or != 0 would result in a non-consistent coding standard locally.

I have caught myself occasionally (!religiously ;-} ) checking for this in each project that I issue modifications to.

