Revision: c6aba063f5dc22c7041101277df69c2fa22fb503
Patch-set: 3
File: init/service.cpp

61:4-62:14
Fri Jul 08 19:45:07 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fafb1832_52fa6411
Bytes: 128
since all but one of these doesn't actually use `rc` outside the test, you can lose the local and move these inside their `if`s.

61:4-62:14
Fri Jul 08 20:43:36 2016 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fafb1832_52fa6411
UUID: ba7a80a8_742c489f
Bytes: 4
Done

67
Fri Jul 08 19:45:07 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fafb1832_b20ac817
Bytes: 48
do unique_ptr holders make this better or worse?

67
Fri Jul 08 20:43:36 2016 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fafb1832_b20ac817
UUID: ba7a80a8_142154a6
Bytes: 47
unique_ptr for the char*'s to avoid the free's?

67
Fri Jul 08 22:31:13 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ba7a80a8_142154a6
UUID: fafb1832_cdd25531
Bytes: 123
yeah. it's always awkward when you have one of these ugly C APIs to interact with. i wish they'd just returned the pointer.

67
Mon Jul 11 13:59:27 2016 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fafb1832_cdd25531
UUID: ba7a80a8_7729aae5
Bytes: 190
The new PS uses unique_ptrs, but I still had to declare a couple of raw pointers because I cannot do &unique_ptr.get(), because get() is an rvalue (or something). Let me know what you think.

210:47-210:51
Fri Jul 08 19:45:07 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fafb1832_92f0ec33
Bytes: 32
service_context, socket_context?

210:47-210:51
Fri Jul 08 20:43:36 2016 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fafb1832_92f0ec33
UUID: ba7a80a8_5427ccbd
Bytes: 49
There's socketcon below, so maybe just |context|?

212:8-214:89
Fri Jul 08 19:45:07 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fafb1832_f2173049
Bytes: 46
the old formatting of this was easier to read.

212:8-214:89
Fri Jul 08 20:43:36 2016 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fafb1832_f2173049
UUID: ba7a80a8_943b24d8
Bytes: 4
Done

225
Fri Jul 08 19:45:07 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fafb1832_72f56021
Bytes: 42
should we check the return value here too?

225
Fri Jul 08 20:43:36 2016 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fafb1832_72f56021
UUID: ba7a80a8_b438a0db
Bytes: 155
This call actually fails for the console service, I'm guessing that's why it's not currently being checked. Happy to investigate further in a follow-up CL.

225
Fri Jul 08 22:31:13 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ba7a80a8_b438a0db
UUID: fafb1832_adcf0989
Bytes: 29
oh, yeah, that's interesting.

229:17-229:22
Fri Jul 08 20:43:36 2016 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ba7a80a8_3426d0bf
Bytes: 27
Also made these PLOG(FATAL)

