Revision: a5f28628b1a9d23722e032cd11af645eb27ca67c
Patch-set: 1
File: toolbox/nandread.c

193
Wed Jun 25 23:40:55 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24bf01e0_eb4459d9
Bytes: 136
would it be better to cast these to u64 if you're using inttypes printing?  There is no guarantee that loff_t and u64 are the same type.

193
Wed Jun 25 23:43:43 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 24bf01e0_eb4459d9
UUID: 24bf01e0_6b516991
Bytes: 15
i mean uint64_t

193
Wed Jun 25 23:52:32 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 24bf01e0_6b516991
UUID: c4cd45a8_e3a8fc68
Bytes: 191
well, it's actually int64_t. but i'm not sure i see your point. C doesn't care that they're the same type, only that they're the same size, and loff_t and off64_t will both always be int64_t.

193
Thu Jun 26 00:02:07 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4cd45a8_e3a8fc68
UUID: 84e50d1e_e1011029
Bytes: 85
you'll get a warning if loff_t is defined as long and int64_t is defined as long long

193
Thu Jun 26 00:07:29 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84e50d1e_e1011029
UUID: a4ca118f_0d88c5a2
Bytes: 137
but we don't do that. they're now both 'long' on LP64 and were always both 'long long' on LP32. (this is the warning this patch removes.)

250
Thu Jun 26 00:07:29 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4ca118f_8d9cd5e2
Bytes: 130
(i thought this was the questionable part, even though i made an incorrectness-preserving change. 64 bits means 16 digits, not 8.)

