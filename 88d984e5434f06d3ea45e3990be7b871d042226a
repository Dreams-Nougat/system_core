Revision: 88d984e5434f06d3ea45e3990be7b871d042226a
Patch-set: 1
File: init/init_parser.cpp

431
Mon Jul 27 18:30:35 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d37da6b_a1bc5e07
Bytes: 126
Is this a change that we want to make?  Allowing config files to import whole directories instead of specifically named files?

431
Mon Jul 27 18:36:12 2015 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d37da6b_a1bc5e07
UUID: 4d37da6b_616bb6e4
Bytes: 277
Being able to import directories enables the dev workflow that we're aiming for in Brillo.

We're gonna need to have the Android build system emit init.rc files for a bunch of new native services, so we'd rather have one include rather  than make each dev modify init.rc files.

431
Mon Jul 27 18:49:34 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d37da6b_616bb6e4
UUID: 8d4c7215_9b218bd6
Bytes: 745
Right, but when do you plan on doing those imports?  'import' right now happens as the file is being parsed, which means if you try to import a file/directory on /system from the init.rc on the ramdisk, that it will fail.

I've proposed creating a command that would dynamically import files based on a trigger, but that did not gain support.  The idea that we settled on is importing a set of files (directories) after file systems are mounted in do_mount_all, see https://android-review.googlesource.com/#/c/161602/3

Assuming that we do the above, then we shouldn't need to extend import to be able to import entire directories.  Unless we do think there's a good reason to do so.  We should modify the readme.txt for import if we do as well.

431
Mon Jul 27 18:56:30 2015 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8d4c7215_9b218bd6
UUID: cdfd8ac1_45d46ab6
Bytes: 435
But that change only supports three hardcoded directories right? Are you suggesting we should add a directory to the ones imported in that list?

The way we're planning things right now, step one would be to dump a bunch of init.rc files in a directory in the ramdisk, and then include that directory from our init.brillo.rc file. Later, we will likely try to find a way to split the main init.rc as discussed in the threads last week.

431
Mon Jul 27 19:05:22 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cdfd8ac1_45d46ab6
UUID: ed47aeea_beeeb9aa
Bytes: 391
My suggestion would be to stick to those directories.  /system/init/* should work for most purposes, right?  One motivation here is to put these init files onto the system partition instead of ramdisk, such that adding a service doesn't require rebuilding both the ramdisk and system partition, right?

Either way, I'm not against this; I just want to know how this is planned on being used.

431
Mon Jul 27 21:29:41 2015 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed47aeea_beeeb9aa
UUID: 2d3e264a_23a374b2
Bytes: 298
For v0 we might be able to get away with using /system/init/*.

In general, different Brillo systems will have different (though overlapping) sets of native system services, but *crucially*, we want people to be able to add services without having to touch anything outside their service directory.

454:12-454:33
Sat Jul 25 00:07:22 2015 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d83be1d_b17fff88
Bytes: 54
Should we add timing information to this function too?

454:12-454:33
Sat Jul 25 00:32:16 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d83be1d_b17fff88
UUID: 0da7a2c0_987a1930
Bytes: 63
since we time the individual files, it's probably not worth it?

454:12-454:33
Mon Jul 27 21:37:11 2015 +0000
Author: Lee Campbell <1052976@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0da7a2c0_987a1930
UUID: 6d9ade79_32d945a5
Bytes: 100
Yeah I think the individual files gives you enough info. Will change if anyone feels strongly though

456
Sat Jul 25 00:32:16 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad977653_9bb217cf
Bytes: 15
std::unique_ptr

456
Mon Jul 27 21:37:11 2015 +0000
Author: Lee Campbell <1052976@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad977653_9bb217cf
UUID: cd882a39_67386efb
Bytes: 144
Done - I've changed it, to:
std::unique_ptr<DIR, int(*)(DIR*)> config_dir(opendir(path), closedir);

c++ ftw, not convinced it clearer though :)

456
Mon Jul 27 21:39:35 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd882a39_67386efb
UUID: 6d1d7ef6_fd420365
Bytes: 58
the more you use it, the more wrong anything else looks...

457
Sat Jul 25 00:32:16 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8dbd52cc_a77fd288
Bytes: 18
always use braces.

457
Mon Jul 27 21:37:11 2015 +0000
Author: Lee Campbell <1052976@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8dbd52cc_a77fd288
UUID: ed8dee45_8237fc6a
Bytes: 4
Done

459
Sat Jul 25 00:32:16 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d9d1a6f_2564a63d
Bytes: 32
no need for struct. this is C++.

459
Mon Jul 27 21:37:11 2015 +0000
Author: Lee Campbell <1052976@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d9d1a6f_2564a63d
UUID: cd882a39_c71842ae
Bytes: 58
cool, was trying to fit in with existing code style.
Done.

461
Sat Jul 25 00:32:16 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2da466b9_df28070f
Bytes: 87
never use readdir_r. http://elliotth.blogspot.com/2012/10/how-not-to-use-readdirr3.html

461
Mon Jul 27 21:37:11 2015 +0000
Author: Lee Campbell <1052976@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2da466b9_df28070f
UUID: 4d9d1a6f_4bde198e
Bytes: 142
arh thanks! I only used it as this is recursive. Though as its per stream (the storage is allocated per DIR) I think we are cool with readdir?

461
Mon Jul 27 21:39:35 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d9d1a6f_4bde198e
UUID: 6d1d7ef6_3d72bbd6
Bytes: 8
correct.

465:12-465:18
Mon Jul 27 18:30:35 2015 +0000
Author: Tom Cherry <1064128@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d86fa2e_b5bc4bb6
Bytes: 168
We can use the d_type entry of dirent to do this same check with less overhead.  We use it in vold and other areas of init, so we already are assuming it's implemented.

465:12-465:18
Mon Jul 27 21:37:11 2015 +0000
Author: Lee Campbell <1052976@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d86fa2e_b5bc4bb6
UUID: 2d3e264a_630f3c3c
Bytes: 80
k, I'm always wary of using d_type but if we already use it I'll change it.
Done

File: init/util.cpp

474
Sat Jul 25 00:32:16 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d86fa2e_e3744ec4
Bytes: 24
== -1 is more idiomatic.

474
Mon Jul 27 21:37:11 2015 +0000
Author: Lee Campbell <1052976@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d86fa2e_e3744ec4
UUID: cd882a39_07fc0aa9
Bytes: 259
In general isn't it better to check for success rather than a specific error? (agree here stat only does 0 or -1)

In Chrome we normally so if (ret != SUCCESS) rather than if (ret == ERROR) as people add error codes and its prone to a failure?

How about < 0?

474
Mon Jul 27 21:41:43 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd882a39_07fc0aa9
UUID: adfcd6c5_c72ce0cf
Bytes: 160
no, in unix -1 is the error. (in POSIXy cases where it's not, like the pthread APIs, the errors tend to be *positive* anyway, so != 0 is still better than < 0.)

474
Mon Jul 27 21:43:04 2015 +0000
Author: Lee Campbell <1052976@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: adfcd6c5_c72ce0cf
UUID: cd42eadd_a0e9b4a6
Bytes: 4
Done

