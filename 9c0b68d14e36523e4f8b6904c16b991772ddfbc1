Revision: 9c0b68d14e36523e4f8b6904c16b991772ddfbc1
Patch-set: 1
File: toolbox/ioctl.c

109
Mon Oct 06 17:04:43 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10116099_4679d4f0
Bytes: 105
but the second argument to ioctl(2) is an int; wouldn't it make more sense to resolve this the other way?

109
Mon Oct 06 17:54:20 2014 +0000
Author: Chris Fries <1004359@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 10116099_4679d4f0
UUID: 30fbc487_a0a9829f
Bytes: 206
Thanks Elliott.

You're right, I missed that ioctl was also taking "int", even if some ioctls are larger than INT_MAX.  We can pass a negative number to toolbox to get around it.

Maybe there's no bug here.

109
Mon Oct 06 18:00:12 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30fbc487_a0a9829f
UUID: 30fbc487_c01ace60
Bytes: 394
well, if it's awkward to use in practice that's still a bug. if people are used to dealing with 0x87654321 it's a pain in the ass if they need to translate that to a negative number.

maybe ll (so people have the choice) and then range check ourselves? (since right now you can type "ioctl /dev/whatever crap" and it'll do _something_, ignoring the fact that you didn't supply a number at all.)

