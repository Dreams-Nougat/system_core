Revision: 400ecad914f5188af81ccd77b2d074ae89716df6
Patch-set: 5
File: init/service.cpp

241:8-241:22
Wed Nov 02 16:16:47 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 06a98af7_72aed0d0
Bytes: 21
Use C++ comment style

538:3-538:36
Wed Nov 02 16:16:47 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 06a98af7_32ff28bd
Bytes: 368
emplace_back is really a move since info goes out of scope. Do I need to use std::move(info) here?

NB: emplace_back can never be used if list based on a base-class and info is a sub-class, but tomcherry@ has stated we can work around that by passing in unique_ptr references to (pedantically) perform cleanup (entries are never removed from descriptors_ in any case).

File: init/service.h

65:4-65:35
Wed Nov 02 16:16:47 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 06a98af7_b20af803
Bytes: 213
essential for compare method, so we retain it for a switch in the other methods.

If only I could access a signature associated with sub-class virtual functions for comparison, then I could make this a base-class.

