Revision: 92c32e2cf961e69d40f547bfd798ec59f899b8f7
Patch-set: 4
File: init/init.cpp

474
Fri Oct 02 16:01:10 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f3eaded_3da80fab
Bytes: 405
This would not be readily parseable as part of an audit record (not name=value format).  Probably don't even need to test for !data, as that would be a bug in the caller, right?  Or if you want to allow for future selinux_check_access() calls by init that don't pass this data, then just do nothing in this case; you'll still get the regular avc message with the base fields (scontext= tcontext= tclass=).

474
Fri Oct 02 16:04:39 2015 +0000
Author: William C Roberts <1013433@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f3eaded_3da80fab
UUID: 953c86f3_0bf50046
Bytes: 266
Yes I was wondering why we even bothered to check for nulls in any of this.

You weighed in on exactly what I wanted you to. It un-parseable. I think we can just drop the whole NULL data, anyone object? Obviously this will follow suit with the other patches as well.

474
Fri Oct 02 16:58:00 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 953c86f3_0bf50046
UUID: b5526a4f_ada51518
Bytes: 181
yeah, i almost made the same comment. only thing that held me back is that if anyone _does_ screw this up, it'll be really hard to debug because the device will reboot if init dies.

474
Fri Oct 02 17:01:18 2015 +0000
Author: Daniel Cashman <1026058@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 953c86f3_0bf50046
UUID: 953c86f3_0baa20b3
Bytes: 344
Yes, this is what I took issue with in the service_manager patch. My position: we don't need this check, and I don't think name=value is an absolute requirement, but this should be considered in the context of the whole denial message.  Having "SELinux : avc:  denied  { perm } for No property audit data scontext=..." would be quite confusing.

474
Fri Oct 02 17:26:57 2015 +0000
Author: William C Roberts <1013433@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 953c86f3_0baa20b3
UUID: 15a33681_2c5e9213
Bytes: 92
Why do we need to add this to the audit record. Couldn't we just log the error and return 0?

File: init/property_service.cpp

109
Fri Oct 02 16:24:41 2015 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9fb745b5_a7f4eab8
Bytes: 79
Should we just pass a pointer to the ucred and potentially include the uid too?

109
Fri Oct 02 16:45:22 2015 +0000
Author: William C Roberts <1013433@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9fb745b5_a7f4eab8
UUID: 354d9aaf_03a16d5f
Bytes: 143
I thought about that as well, I would be ok with that. uid could be a very helpful hint as well. At this point should we just dump gid as well?

109
Fri Oct 02 17:01:18 2015 +0000
Author: Daniel Cashman <1026058@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 354d9aaf_03a16d5f
UUID: b5398a03_75dbcab1
Bytes: 39
If we think that would provide value...

109
Fri Oct 02 17:29:25 2015 +0000
Author: William C Roberts <1013433@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b5398a03_75dbcab1
UUID: 953c86f3_be7530c2
Bytes: 4
Done

111
Thu Oct 01 23:59:08 2015 +0000
Author: William C Roberts <1013433@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 75439281_c8a04070
Bytes: 81
Ill caveat this with I am a C++ idiot, but why are we not using static_cast here?

111
Fri Oct 02 16:58:00 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 75439281_c8a04070
UUID: 354d9aaf_633dd1a3
Bytes: 347
you can. some people prefer reinterpret_cast because it shouts "danger! crappy type-unsafe C API here!". others prefer static_cast because it's the weakest cast that will still work. i'll +2 either (but tend to use reinterpret_cast personally; i've never seen anyone make the mistakes that static_cast would prevent in this specific circumstance).

111
Fri Oct 02 17:29:25 2015 +0000
Author: William C Roberts <1013433@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 354d9aaf_633dd1a3
UUID: 75439281_1b0f146a
Bytes: 53
I will leave it as you requested. I was just curious.

