Revision: 1ed1e382843afbef11598739f2d1649c1bfeae21
Patch-set: 11
File: rootdir/etc/init.goldfish.rc

8
Mon Jul 23 21:10:22 2012 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAHs3//+4U=
Bytes: 55
maybe this should be called in_emulator instead of qemu

8
Tue Jul 24 11:31:20 2012 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAHs3//+4U=
UUID: AAAHsH///04=
Bytes: 129
We could do that, but it would require making the same change over in external/sepolicy where the boolean is defined.  Up to you.

8
Tue Jul 24 20:13:43 2012 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAHsH///04=
UUID: AAAHtH//+B4=
Bytes: 120
Are there places in the framework that reference this boolean? Or is it only ever referenced in goldfish specific stuff?

8
Wed Jul 25 12:10:25 2012 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAHtH//+B4=
UUID: AAAHyX///+g=
Bytes: 288
It is only explicitly referenced in this file and in external/sepolicy, not in the frameworks. The SELinux java interfaces allow system apps to get the full list of booleans, which is used by the SEAndroidManager app, but it doesn't make any hardcoded references to any specific booleans.

File: rootdir/init.rc

115
Mon Jul 23 21:10:22 2012 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAHtH//+mE=
Bytes: 337
why are somethings doing a restorecon and some aren't? Maybe we should be doing a context restore on all the things we chown? Can chown be modified to do a context restore or would that be odd? I'm just trying to minimize the errors when others change their rc files and arbitrarily sprinkle the files with restorecons until things work.

115
Mon Jul 23 21:32:08 2012 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAHtH//+mE=
UUID: AAAHtH//+kk=
Bytes: 242
scratch that, making chown do it would be sucky and ugly.

Is there a way we can just do a "restorecon_all" at the end of the init process (before remounting root ro, and then after setting up /data) to just restore the context of everything?

115
Tue Jul 24 11:31:20 2012 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAHtH//+kk=
UUID: AAAHsH///00=
Bytes: 891
Most of the directories are created with the right context during build (the already merged mkyaffs2image and make_ext4fs changes) or by init when it creates the directory (pending change If6af6c4887).  So we only need restorecon calls now for a few cases.  /dev and /dev/socket are created by init before policy is first loaded, so we have to restorecon them afterward.  /cache needs to be initially labeled after filesystem creation there, so we do it here much the same way as chown/chmod is applied.  /data generally shouldn't be required as the initially flashed image will be labeled already but is done here just in case it was reset, again similar to the chown/chmod situation.  Not sure what a restorecon_all would do or where it would obtain its list of directories to apply; we don't really need or want to restorecon the entire directory tree on each boot and that would be slow.

115
Tue Jul 24 12:10:36 2012 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAHsH///00=
UUID: AAAHsH///0s=
Bytes: 331
One other observation: the restorecon calls need to happen as early as possible so that any files subsequently created in those directories will be labeled correctly.  So the restorecon /dev /dev/socket has to happen before ueventd starts, and the restorecon /cache and /data should occur before anything else gets created in them.

115
Tue Jul 24 20:13:43 2012 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAHsH///0s=
UUID: AAAHtH//+Bk=
Bytes: 810
i see, ok.

My questions come out of the concern that it is not exactly clear while looking through these files when a restorecon is appropriate and when it isn't. I'm worried, as mentioned previously, that people will not understand when and where to use it so they will either use it everywhere, nowhere, or randomly. I'm trying to figure out how to make it be pretty fool-proof. Perhaps a block comment at the top of the file? Maybe something at the end of boot can walk /, /dev/, etc to make sure  things are sane and print errors if not (one-time service?) Shrug. 

Note that I was only referring to the ramdisk files (though elsewhere, Matt F tells me that it is done through genfscon?). I expect the emmc/disk based filesystems to already have the correct labels (outside the /data stuff you mentioned).

115
Wed Jul 25 12:10:25 2012 +0000
Author: Stephen Smalley <1010111@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAHtH//+Bk=
UUID: AAAHyX///+c=
Bytes: 1149
The restorecon /dev and restorecon /dev/socket could be taken to init code (to the tail of selinux_load_policy) if that is preferred, maybe rolled up into the other change for labeling directories.  Has to be done after policy load and before /dev nodes start to get created by ueventd.

The restorecon of /cache, /cache/recovery, and /data closely follows the existing model for fixing up ownerships and permissions for those directories in case they were reset or (in the /cache/recovery case) created with odd permissions by the recovery system.  So I think those restorecon calls are reasonable to retain here and shouldn't confuse people.  And that's all that would be left - three restorecon calls, each closely associated with an existing chown/chmod sequence, and only for resettable partitions.

rootfs doesn't get per-file labels anyway as they aren't stored in the initrd, so restorecon doesn't make much sense there.

Then in the board-specific init.rc files, restorecon gets used for the factory partition as it is typically not labeled, at least presently, although that will hopefully change when devices ship with SE Android enabled.

