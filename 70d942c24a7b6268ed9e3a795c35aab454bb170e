Revision: 70d942c24a7b6268ed9e3a795c35aab454bb170e
Patch-set: 2
File: include/log/log.h

628
Tue Jan 19 23:03:39 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 27673e34_15ba3cf5
Bytes: 150
ugh. we have a python script to auto-generate a .java file for each set of log tags (build/tools/java-event-log-tags.py), but nothing for native code?

628
Tue Jan 19 23:14:03 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 27673e34_15ba3cf5
UUID: 07495aa4_c25bf208
Bytes: 681
Alas, this header is the wrong place for the list of tags in any case. So far we have been ad-hoc, and in some cases even added them to the associated Android.mk files as a -D define passed in to the compiler.

As a baby-step, add a build-time tool or script to convert SecurityLog.logtag into a local header?

NB: __android_log_security_bswrite() calls a subroutine which checks __android_log_security() in the cases where the LOG-SECURITY buffer is referenced. For this call, we are not saving enough cycles to warrant the pre-check. One would expect the caller to use __android_log_security() if there is some work to be done (eg: calculate a package SHA) to format the message.

628
Wed Jan 20 15:55:20 2016 +0000
Author: Rubin Xu <1059499@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 07495aa4_c25bf208
UUID: 8780ea14_103e0a09
Bytes: 453
No we don't have a tool for native code :(

So if I do have such a script to generate header files from tag file, how does it interact with the build system? I'm not sure how we do it cross project cleanly, as the tag file is at frameworks/base/core/java/android/auditing/SecurityLog.logtags (Only exists in internal tree, needs cherry-pick back to AOSP). 

Is there an alternative header file where we could put these defines, as a short term solution?

628
Wed Jan 20 17:13:13 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8780ea14_103e0a09
UUID: 27fe5ee6_bc1021a2
Bytes: 326
wingyang@ may get involved given the widespread and growing problem, but you are free to create your own generation tool.

The tool would probably have a dependency on the generated global event-log-tags file.

cherry-pick into AOSP, all of this should go to AOSP IMHO.

If you can not wait, then create a _local_ header file.

