Revision: 28ea35941fd46929ed65757cff064c644c3e1785
Patch-set: 1
File: libziparchive/zip_archive.cc

918
Sat Aug 09 07:11:09 2014 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 56a3cfb2_d3dba624
Bytes: 32
Is this cast to (void*) needed ?

918
Sat Aug 09 09:18:08 2014 +0000
Author: Piotr Jastrzebski <1052243@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56a3cfb2_d3dba624
UUID: 9699c785_954f46a2
Bytes: 110
It seems unnecessary but I was getting compilation error without it. Maybe it's just me doing something wrong.

918
Sat Aug 09 18:06:17 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9699c785_954f46a2
UUID: 567caff0_cb892915
Bytes: 366
this is really a const_cast<char*>. (one reason we don't use C-style casts is because the reader doesn't necessarily immediately see what the writer was doing.) the better fix though isn't to use a const_cast --- prefix should just have type char* instead of const char*. (or, unless there's some reason not to, make it a std::string and remove the strdup and free.)

918
Mon Aug 11 07:16:05 2014 +0000
Author: Piotr Jastrzebski <1052243@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 567caff0_cb892915
UUID: 56a3cfb2_d69ab491
Bytes: 130
string might not be suitable here because prefix is a byte buffer which can contain \0 in the middle. I will change to const_cast.

918
Mon Aug 11 08:40:02 2014 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56a3cfb2_d69ab491
UUID: 56a3cfb2_f64df84f
Bytes: 470
enh: good point, it didn't strike me that this was because we were calling free with "const void *", I assumed it was something daft like using an integral type.

haaawk: I don't think std::string cares about internal '\0' unless you use one of its c compatibility APIs (c_str et al.). You could use std::vector<char> if you prefer, or you could leave it as is. I think using std::string or std::vector might make things slightly more roundabout in this particular case.

