Revision: 8ebb55ae07c14a38caea61b34435338822c86015
Patch-set: 1
File: libcrypto_utils/Android.mk

48
Mon Apr 04 20:47:12 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4ec61432_6809df80
Bytes: 49
you didn't need this for the host shared library?

48
Mon Apr 04 21:01:28 2016 +0000
Author: Mattias Nissler <1080683@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4ec61432_6809df80
UUID: 8e3accf4_e0960276
Bytes: 259
This copies what libcrypto is doing. It has the LOCAL_MODULE_HOST_OS only for the static library (I think it's present for building adb). If I add the same line for the host shared library, I'll run into trouble since there is no suitable libcrypto available.

File: libcrypto_utils/include/crypto_utils/byte_order.h

21
Mon Apr 04 20:47:12 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4ec61432_08d13b17
Bytes: 68
(android is little-endian, so feel free to just remove any of this.)

21
Mon Apr 04 21:01:28 2016 +0000
Author: Mattias Nissler <1080683@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4ec61432_08d13b17
UUID: 6e3d98ed_3f85a737
Bytes: 394
Well, this gets built as part of adb, and adb theoretically runs on Linux hosts which might use big-endian byte order. I guess we just don't support this, at least I wouldn't feel confident adb works on big-endian Linux hosts?

Anyhow, I figured I'd rather not add to the problem, and I think it's nice to have the swap macros at the right points in the code if only for documentation purposes.

21
Mon Apr 04 21:04:39 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6e3d98ed_3f85a737
UUID: 4ec61432_68031f34
Bytes: 138
we removed all the big-endian host code too several releases ago. because we have no big-endian hosts or targets, it's just untested code.

21
Mon Apr 04 21:11:38 2016 +0000
Author: Mattias Nissler <1080683@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4ec61432_68031f34
UUID: 2eaac053_05693283
Bytes: 387
Hm, keeping untested code doesn't make much sense indeed. However I still need some conversion to meet BoringSSL's expectation of binary-encoded numbers being big endian. I could just drop all the macros for specific cases and use crypto_utils_bswap32 in the places where I need to convert? That may still look/weird incorrect to people reading the code. Will think some more about this.

21
Mon Apr 04 21:16:26 2016 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2eaac053_05693283
UUID: 4ec61432_886c4bd6
Bytes: 132
use the betoh(16|32|64) macros? then it's the c library's problem. (though i guess i'm not sure that mac/windows have these macros.)

