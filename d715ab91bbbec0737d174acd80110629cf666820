Revision: d715ab91bbbec0737d174acd80110629cf666820
Patch-set: 1
File: init/init_parser.c

662
Fri Mar 28 18:05:19 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 194fc37f_25568e9a
Bytes: 237
This will cause every argument to every service to be in memory twice, which doesn't seem necessary.  Can you find a way to use the original copy if there were no properties in it?  It will probably be ugly, since you can't free args[i].

662
Fri Mar 28 18:14:03 2014 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 194fc37f_25568e9a
UUID: f904af03_85b2e879
Bytes: 232
If you're ok with ugliness, then yes it's definitely possible. I'll change this.

There's also a performance (not memory) optimization I have in mind for expand_props for the case where there isn't an expansion. I'll apply that too.

File: rootdir/init.rc

9:0-9:30
Fri Mar 28 18:20:24 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f94bcf71_242fb20c
Bytes: 88
i figured we just have different imports for the different static configuration choices.

9:0-9:30
Fri Mar 28 18:25:17 2014 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f94bcf71_242fb20c
UUID: 19f8a337_26655c2a
Bytes: 279
You can't "override" default rules with this mechanism so while it's still possible to to use it, we'll need to add zygote rules to each init.${ro.hardware}.rc file

We'll also need to add a few additional hacks to support testing with 64 only or 32 only if we go down that path.

9:0-9:30
Fri Mar 28 18:33:12 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 19f8a337_26655c2a
UUID: d948cb7a_03ef0e6b
Bytes: 232
sorry, I didn't mean to use ro.hardware to switch, just this pattern. so for example

import /init.${ro.zygote}.rc

to select between  /init.zygote32.rc,  /init.zygote64.rc, and possible ones with lazy vs non-lazy secondary startup.

9:0-9:30
Fri Mar 28 19:19:53 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d948cb7a_03ef0e6b
UUID: f94bcf71_c7ad8080
Bytes: 141
It would be nice to keep everything centralized, and not have to edit 4 different zygote rc files to change things, but I'm fine with either.

9:0-9:30
Fri Mar 28 21:18:22 2014 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f94bcf71_c7ad8080
UUID: f904af03_65723cfc
Bytes: 356
I think Brian's approach sounds like a good idea.

After our discussion yesterday, I started this change with the thought that centralized is better, but at that point I wasn't aware this would need parser changes. Also, Brian's suggestion gives us a bit more flexibility with respect to passing different command line arguments to 32 an 64 bit zygote etc.

503:88-503:111
Fri Mar 28 18:05:19 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 194fc37f_055b92c0
Bytes: 45
What do you expect extra_args to be used for?

503:88-503:111
Fri Mar 28 18:14:03 2014 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 194fc37f_055b92c0
UUID: f904af03_45bce04b
Bytes: 792
There are at least two things I have in mind :

(i) --start_secondary : exec the secondary zygote as soon as the primary is started.
(ii) (?) --zygote_abi=abi : Unless there's a clean way for the zygote to determine what ABI it's using, it has to be told. That way, the ActivityManager can just say "startProcess with String abi="abi" and the right zygote will start it.

So, (i) can be replaced by a system property, and so can (ii) .

In fact, if we want to be less general, we can assume there will be a maximum of two zygotes and one of them *must* be 64 bits and the other *must be 32*. Then the ActivityManager can say "startProcess boolean is64=false" on it's zygote connection.

Depends on how flexible we want to be, and how strong our aversion for additional arguments like this is.

503:88-503:111
Fri Mar 28 19:19:53 2014 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f904af03_45bce04b
UUID: 194fc37f_e8edeba0
Bytes: 173
That seems like fairly high level policy to cram through init.rc.  Can Zygote just read the properties directly?  Maybe also supporting command line arguments for debugging?

503:88-503:111
Fri Mar 28 21:18:22 2014 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 194fc37f_e8edeba0
UUID: f904af03_4567403c
Bytes: 271
Zygote could read them directly, but we need slightly different behaviour in process launched by init from those started directly from the command line (some of that can be expressed by doing different things in ZygoteInit.java / RuntimeInit.java but it might get messy).

503:88-503:111
Fri Mar 28 21:27:02 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f904af03_4567403c
UUID: 99157331_889e7f09
Bytes: 186
I'm thinking that two files might be enough. I'm not following why the rest can't be done with system properties inside app_process (since it can be conditional on the --zygote argument)

