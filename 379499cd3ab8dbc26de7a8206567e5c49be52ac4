Revision: 379499cd3ab8dbc26de7a8206567e5c49be52ac4
Patch-set: 3
File: metricsd/.clang-format

1:14-1:20
Mon Nov 30 14:15:40 2015 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bbcfc771_6794e6b7
Bytes: 182
According to what Gaurav and Jim described way back when, I think this might need to be "Chromium" rather than "Google". I was using "Google" because I was doing work in system/core.

1:14-1:20
Mon Nov 30 15:03:28 2015 +0000
Author: Mike Frysinger <1040868@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bbcfc771_6794e6b7
UUID: 5be08be0_d2057457
Bytes: 199
i think we want to converge on one.  is the difference between Chromium & Google significant to care about ?  i guess we could run clang format between the two on this codebase and check the diff ...

1:14-1:20
Mon Nov 30 15:05:14 2015 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5be08be0_d2057457
UUID: fb0f7f76_37c7a06d
Bytes: 294
Do we care that parts of system/core are already using Google style? I personally don't care, as long as we're consistent and enforcing we can do whatever. I'm happy to do Chromium for Brillo. I remember enh@ mentioning he was doing Chromium for new parts of Bionic.

TL;DR: Let's use Chromium.

1:14-1:20
Mon Nov 30 15:06:38 2015 +0000
Author: Mike Frysinger <1040868@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fb0f7f76_37c7a06d
UUID: 9bd6830b_8603ae9b
Bytes: 11
sounds fine

1:14-1:20
Mon Nov 30 16:02:44 2015 +0000
Author: Mike Frysinger <1040868@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9bd6830b_8603ae9b
UUID: 9bd6830b_26c2e283
Bytes: 224
to clarify, i don't care which guide we converge on as long as we converge.  i just re-found the threads where we agreed to move to Chromium for C++, so let's do that here too.  metrics should already be written in that too.

1:14-1:20
Mon Nov 30 16:08:39 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9bd6830b_8603ae9b
UUID: 5b1b2bb8_63ff8a59
Bytes: 207
yeah, iirc chromium is basically google but with type* rather than "type *", wrapping after binary operators rather than before, and using size_t --- fixing three of the worst things i remember from google3.

1:14-1:20
Mon Nov 30 17:07:44 2015 +0000
Author: Gaurav Shah <1072350@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b1b2bb8_63ff8a59
UUID: bbe987fc_71dbb845
Bytes: 549
What Jim and I came up with was the recommendation to use Google style with 2 minor tweaks (that I suppose Chromium style also adds) -- http://go/brillo-c++-style

I actually prefer calling it as Google style (with tweaks) over calling it Chromium. Specifically, the latter has a different set of restrictions on C++11 usage than Google C++ style - see http://dev.chromium.org/developers/coding-style

Since we aren't bound with compiler limitations (e.g. MSVS) as Chromium,  we are more aligned with Google C++ usage rather than Chromium C++ usage.

1:14-1:20
Mon Nov 30 17:12:14 2015 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bbe987fc_71dbb845
UUID: fbe4dff8_9a5a1c30
Bytes: 153
Right, but clang-format won't enforce those restrictions. "Chromium" in this context is specifically about formatting, not about coding style in general.

1:14-1:20
Mon Nov 30 19:02:25 2015 +0000
Author: Bertrand Simonnet <1076133@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fbe4dff8_9a5a1c30
UUID: 3bd59733_0d221181
Bytes: 759
FYI, difference between chromium and google style guide:

$ clang-format -style=Google -dump-config > google
$ clang-format -style=Chromium -dump-config > chromium
$ diff chromium google 
3c3
< # BasedOnStyle:  Chromium
---
> # BasedOnStyle:  Google
11c11
< AllowAllParametersOfDeclarationOnNextLine: false
---
> AllowAllParametersOfDeclarationOnNextLine: true
14,16c14,16
< AllowShortFunctionsOnASingleLine: Inline
< AllowShortIfStatementsOnASingleLine: false
< AllowShortLoopsOnASingleLine: false
---
> AllowShortFunctionsOnASingleLine: All
> AllowShortIfStatementsOnASingleLine: true
> AllowShortLoopsOnASingleLine: true
21c21
< BinPackParameters: false
---
> BinPackParameters: true
44c44
< DerivePointerAlignment: false
---
> DerivePointerAlignment: true

1:14-1:20
Mon Nov 30 19:06:32 2015 +0000
Author: Gaurav Shah <1072350@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fbe4dff8_9a5a1c30
UUID: 7bf38fea_0f556545
Bytes: 1068
I see, in that case Chromium should be fine as well. 

My question then though is why not make it BasedOnStyle: Google + additional restriction of */& with type (PointerAlignment: Left)?

More details below. (tl;dr: have a slight preference for deviating minimally from Google style).

Here's the delta between BasedOnStyle Google vs. Chromium as defined by clang-format:

$ diff google-style chromium-style 
11c11
< AllowAllParametersOfDeclarationOnNextLine: true
---
> AllowAllParametersOfDeclarationOnNextLine: false
14,16c14,16
< AllowShortFunctionsOnASingleLine: All
< AllowShortIfStatementsOnASingleLine: true
< AllowShortLoopsOnASingleLine: true
---
> AllowShortFunctionsOnASingleLine: Inline
> AllowShortIfStatementsOnASingleLine: false
> AllowShortLoopsOnASingleLine: false
21c21
< BinPackParameters: true
---
> BinPackParameters: false
44c44
< DerivePointerAlignment: true
---
> DerivePointerAlignment: false

Looks like the delta is related to additional formatting restrictions in Chromium (http://dev.chromium.org/developers/coding-style#Code_Formatting).

