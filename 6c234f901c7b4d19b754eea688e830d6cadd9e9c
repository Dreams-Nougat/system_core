Revision: 6c234f901c7b4d19b754eea688e830d6cadd9e9c
Patch-set: 1
File: init/ueventd.c

70
Fri Mar 18 17:37:42 2011 +0000
Author: Vikram pandita <1001861@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAA/X///bg=
Bytes: 64
why not just use: 
string = strtok(ptr, "androidboot.hardware");

70
Mon Mar 21 06:50:43 2011 +0000
Author: Sean McNeil <1001191@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA/X///bg=
UUID: AAAA/X///S0=
Bytes: 263
Wouldn't that return the string preceding any one of the delimiter characters a or n or d or...? We want the string following androidboot.hardware= and I do not think that is what you get using strtok. By the way, this is just pruned down code copied from init.c.

70
Mon Mar 21 06:57:40 2011 +0000
Author: Vikram pandita <1001861@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA/X///S0=
UUID: AAAA/X///Ss=
Bytes: 290
I think strtok() could reduce the search code, since you get a reference to "androidboot.hardware\0". Next some pointer additions can get you contents after "=" and till next "\n or \0".

two strtok's do the same thing getting done in while loops...

Just another way of doing same thing !!

70
Mon Mar 21 07:12:50 2011 +0000
Author: Sean McNeil <1001191@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA/X///Ss=
UUID: AAAA/X///Sg=
Bytes: 230
strtok() would be less efficient here. It is designed to look for more than one possible delimiter. We could just do something like:

if (strncmp(name, "androidboot.hardware=", 21)
  strlcpy(hardware, name + 21, sizeof(hardware));

70
Mon Apr 11 06:40:10 2011 +0000
Author: Victor Boivie <1003152@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAA/X///Sg=
UUID: AAAA/n///FY=
Bytes: 152
This is the same code as in init.c, so I would recommend that you break that out into util.c (make more generic if needed) and call it from both places.

