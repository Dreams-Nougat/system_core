Revision: f3bd156c0fd5f39f58cfd8355b4a41ee7b045053
Patch-set: 2
File: adb/adb.c

866
Thu Aug 30 20:05:48 2012 +0000
Author: JP Abgrall <1005480@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAI6X//80Q=
Bytes: 57
While in here, might as well add the missing "_exit(1);".

File: adb/commandline.c

84
Mon Aug 20 20:27:04 2012 +0000
Author: Chris Elford <1005576@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAIsH///Yc=
Bytes: 51
Are there any security implications of this change?

84
Mon Aug 20 20:46:49 2012 +0000
Author: Matt Gumbel <1006781@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAIsH///Yc=
UUID: AAAIu3///eY=
Bytes: 148
By default, no. If, however, the user explicitly passes the '-a' flag, then any host will be able to connect to their adb server. That is by design.

99
Mon Aug 20 20:27:04 2012 +0000
Author: Chris Elford <1005576@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAIsH///Yg=
Bytes: 43
Why don't you just use adb connect instead?

99
Mon Aug 20 20:46:49 2012 +0000
Author: Matt Gumbel <1006781@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAIsH///Yg=
UUID: AAAIu3///eM=
Bytes: 833
Because adb connect does not work for the use-case this feature was developed for (USB device-under-test on remote host).

adb connect looks like this:
            Host A                                            Host B
 -----------------------------------------            ---------------------------
 |Emulator or adbd listening on port 5555|<---------->|adb server<--->adb client|
 -----------------------------------------            ---------------------------

This feature looks like this:
             Host A                         Host B
 -----------------------------     TCP   ------------
 |USB device <---> adb server|<--------->|adb client|
 -----------------------------           ------------

Notice that in the adb connect case, it is impossible to have a USB android device on host A and an adb client on host B.

99
Mon Aug 20 21:00:33 2012 +0000
Author: Matt Gumbel <1006781@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAIu3///eM=
UUID: AAAIu3///dA=
Bytes: 242
Anticipating the follow up question, "Why not run the adb server/client connection over an ssh tunnel," the answer is that such a tunnel would require listening on the adb port on host B thus preventing a real adb server from listening there.

99
Thu Aug 30 20:05:48 2012 +0000
Author: JP Abgrall <1005480@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAIu3///dA=
UUID: AAAI6X//8yk=
Bytes: 83
http://stackoverflow.com/questions/1754162/remote-debugging-with-android-emulator
?

99
Thu Aug 30 22:34:16 2012 +0000
Author: Matt Gumbel <1006781@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAI6X//8yk=
UUID: AAAI6n//9bE=
Bytes: 500
jp abgrall: The method described in that URL applies only to the situation above labeled "adb connect looks like this". It does not apply to the case I am trying to solve with this patch.

ssh forwarding works fine for connecting to emulator port 5555 on remote machine. However, it does not work fine for connecting to adb server port on remote host for the reason I give above:  such a tunnel would require listening on the adb port on host B thus preventing a real adb server from listening there.

