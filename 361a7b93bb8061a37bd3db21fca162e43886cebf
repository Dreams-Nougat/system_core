Revision: 361a7b93bb8061a37bd3db21fca162e43886cebf
Patch-set: 1
File: /COMMIT_MSG

10:0-10:85
Thu Sep 03 02:09:46 2015 +0000
Author: Spencer Low <1065256@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 644d9e85_0476eb60
Bytes: 162
I think the reason D() used a lock was because there used to be two calls to fprintf(), but enh changed that recently. Base logging uses a lock around the logger.

10:0-10:85
Thu Sep 03 03:25:33 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 644d9e85_0476eb60
UUID: 64159e82_4599cab4
Bytes: 17
That makes sense.

File: adb/adb_trace.h

52:16-52:40
Thu Sep 03 02:09:46 2015 +0000
Author: Spencer Low <1065256@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44141a88_44670e5c
Bytes: 181
I was going to suggest removing the errno saving/restoring because I do that in LOG(), but I just tested it and I didn't do it correctly (damn, I should have written a test for it).

52:16-52:40
Thu Sep 03 03:25:33 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44141a88_44670e5c
UUID: 644d9e85_64b59f4e
Bytes: 265
yes, the errno has been saved in LOG(). But StringPrintf and __VA_ARGS__ may change errno (__VA_ARGS__ is possible to contain function calls). I don't know if there is any guarantee in c++ that LOG(INFO) can go strictly before its parameters following operator<<().

52:16-52:40
Thu Sep 03 23:22:57 2015 +0000
Author: Spencer Low <1065256@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 644d9e85_64b59f4e
UUID: 64159e82_f91b3f79
Bytes: 95
Yeah, I'll put this on my list to investigate (or someone else can feel free to beat me to it).

52:16-52:40
Fri Sep 04 19:21:50 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 64159e82_f91b3f79
UUID: e486eed4_1ef153cf
Bytes: 115
i don't understand the problem with the errno save/restore in <base/logging.h>. that's how google3's logging works.

52:16-52:40
Fri Sep 04 19:24:51 2015 +0000
Author: Spencer Low <1065256@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e486eed4_1ef153cf
UUID: 64159e82_5a3c0192
Bytes: 159
I tried a simple test case and it failed:

  int myfunc() { errno = 6666; return 0; }

  errno = 1337;
  LOG(INFO) << myfunc();
  printf("errno: %d\n", errno);

52:16-52:40
Sun Sep 06 00:33:39 2015 +0000
Author: Yabin Cui <1056364@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 64159e82_5a3c0192
UUID: 04cce27b_7d8550f8
Bytes: 150
Although I thought compilers are possible to call myfunc() first, I didn't expect that they really do that. But the test also fails on my workstation.

52:16-52:40
Thu Sep 17 08:00:49 2015 +0000
Author: Spencer Low <1065256@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04cce27b_7d8550f8
UUID: a9692fe6_3768182a
Bytes: 147
I've prototyped a fix to the errno restoring (and conditional logging). Hopefully should have a code review by Thurs or Fri for your consideration.

