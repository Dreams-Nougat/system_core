Revision: d4e409415873e71ae93cfe667bf51fcb39adb51b
Patch-set: 2
File: /COMMIT_MSG

7:0-7:3
Tue Dec 16 17:56:59 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c16380f0_69ba2596
Bytes: 4
logd

File: logd/LogTimes.h

71:4-72:29
Tue Dec 16 17:56:59 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 815d0834_87fd46c7
Bytes: 1022
Please no.

TL;DR

This will result in a slow logger port (serial console log, or other slow path) increasing memory pressure on the system. triggerSkip is used to tell the reader threads in an emergency (using up to double requested storage) to dump a series of entries rather than forwarding them so that the memory can be freed. This allows a reader range lock to clear so that pruning can progress.

We can not allow this to be bypassed or we could get into a (minor) Memory DoS attack should a reader thread be blocked.

Architectural question: Could the problem be that the writer thread is not waking up to reader thread(s) to process the skip? IS there something blocking the reader thread(s) from waking up? Eventually when we get to double the storage, we kill the reader thread, but up to that point we will be doing a lot of ignored mechanics burning CPU cycles. This code was added because bumping the errant reader threads alone was undesirable if they were merely slow.

NB: Android coding standard, use { }

