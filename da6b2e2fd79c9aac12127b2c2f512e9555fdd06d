Revision: da6b2e2fd79c9aac12127b2c2f512e9555fdd06d
Patch-set: 3
File: liblog/logd_write.c

415
Thu May 01 22:12:14 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a520423_668a4e9c
Bytes: 287
i'm starting to think that a better fix would have been to change __android_log_write to recognize the first line it gets at ANDROID_LOG_FATAL priority and pass that to bionic. that way the VM's LOG(FATAL) would get its first line stashed away, and the LOG_ALWAYS_FATAL macros would too.

415
Thu May 01 22:58:38 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0a520423_668a4e9c
UUID: 0a520423_cce6c34e
Bytes: 349
The fatal message without abort, how would that work? What about abusers wanting to log to ANDROID_LOG_FATAL at their pleasure?

__android_log_write logs normally, but before returning, pass the copy to bionic. If another comes along, overwrite (so the last line stashed) sounds fine to me. Here we go to __builtin_trap() so nothing more happens ...

415
Thu May 01 23:04:33 2014 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0a520423_cce6c34e
UUID: 0a520423_cc82433e
Bytes: 453
yeah, i hadn't thought of that. still, the only time it would be weird is if someone logs a message as FATAL and then just carries on but then eventually dies of something unrelated --- then we'd show the out of date/irrelevant message. but that seems like a small price to pay for helping sane applications actually get their reason for dying into the native crash report.

do we have reason to believe much code lies about the severity of its logging?

415
Thu May 01 23:12:45 2014 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0a520423_cc82433e
UUID: 8a8354c4_45e4fc6f
Bytes: 281
I looked at a few saved logcat files I have sitting on my Downloads directory, or pulled, and on an active device. All '^F/' were from libc (and many were associated with binary modules we do not have control over). So, no, I do not believe anyone lies regarding ANDROID_LOG_FATAL.

