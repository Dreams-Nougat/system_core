Revision: cb687d717a2a2fe688147309eb68a84747c6866b
Patch-set: 4
File: init/init.c

768
Sat Jul 28 00:53:20 2012 +0000
Author: William C Roberts <1013433@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAH4n///6w=
Bytes: 382
IMO I would try to avoid having strings for this stuff scattered around. why not make functions in libselinux that that can return the appropriate file to use to the caller. This way if we update file locations, we can just modify one spot. 

Again, ill concede to Google's arguments if it is ok with them it is ok with me, their the ones that have to live with the code in the end.

768
Tue Jul 31 22:34:16 2012 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAH4n///6w=
UUID: AAAH7H///Ug=
Bytes: 819
I would normally agree with you, but property service exists in one place and is something that we really should keep together in init (unlike the other stuff that was in restorecon/init/ueventd). I don't like having strings like this all over the place either, but I'm a little worried about debugging the property service and not knowing what to look for.

What I think would be useful is a function that takes a list of files and returns a handle so that you don't have to open code the while loop all over the place.

Also, the code below that loops over the policy list and does open, and then fstat, and then mmap, and then load_policy. All of that code should all be done inside the selinux library and init should just feed it the list of files/paths to try. There should be no reason to have this code in init.

900
Sat Jul 28 00:53:20 2012 +0000
Author: William C Roberts <1013433@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAH4n///6s=
Bytes: 50
Why not put the audit call back in libselinux too?

959
Sat Jul 28 00:53:20 2012 +0000
Author: William C Roberts <1013433@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAH4n///6o=
Bytes: 102
This could be changed to something like:

selinux_android_setcallback()
and hide the details from init

