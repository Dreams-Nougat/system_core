Revision: 4f1965a95860fac25ab56fe61ea9ed9540b111c7
Patch-set: 2
File: liblog/logd_write.c

155:0-155:8
Fri Jun 05 05:26:55 2015 +0000
Author: Yevgeny Y Rouban <1037563@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f9b130f2_f74a60a3
Bytes: 16
should be static

274:1-274:40
Wed Feb 11 15:42:30 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 16cfa548_8c9ea73f
Bytes: 276
By definition, the Android Logger is non-blocking and must be low overhead. One can not put a sleep inline to this call.

The API specifies that if the log message returns EBUSY, and the caller _must_ have the message delivered, they can loop. This is not advised in any case.

274:1-274:40
Fri Feb 13 06:41:32 2015 +0000
Author: Yevgeny Y Rouban <1037563@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 16cfa548_8c9ea73f
UUID: b686d963_f164680d
Bytes: 242
this overhead is added only if throughput_limit.delay_us != 0.
In this case the engineer added LIBLOG_THROUGHPUT_LIMIT to this particular process and expects delays for the sake no message loss.
In all other cases there is no overhead at all.

