Revision: a3b3071325929fea52256d542a1c44e30584368d
Patch-set: 5
File: init/capabilities.cpp

82
Fri Dec 16 17:00:49 2016 +0000
Author: Nick Kralevich <1003966@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fa6fafa9_bde043e4
Bytes: 286
This will always be true, unless there are so many capabilities that you wrap an unsigned int.  :-) But even if that happens, init is compiled with integer sanitization enabled (https://android-review.googlesource.com/166778), so init will crash before this could wrap.

Can be deleted.

82
Fri Dec 16 17:05:04 2016 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fa6fafa9_bde043e4
UUID: 5a2fdb70_a7c10a95
Bytes: 220
That CL seems to have been reverted though. Did it land again?

Since we're starting at CAP_WAKE_ALARM, we might not need the sanitizing. If you confirm that the CL you mentioned has actually landed, I'm happy to remove.

82
Fri Dec 16 17:21:13 2016 +0000
Author: Jorge Lucangeli Obes <1076138@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5a2fdb70_a7c10a95
UUID: 5a2fdb70_67d8f280
Bytes: 111
Not sure what happened with that CL but the LOCAL_SANITIZE line is still available in the .mk file, so will do.

82
Fri Dec 16 17:23:46 2016 +0000
Author: Nick Kralevich <1003966@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5a2fdb70_a7c10a95
UUID: fa6fafa9_68b98ba8
Bytes: 618
The revert mentioned in the commit message for https://android-review.googlesource.com/166778 was abandoned. 

https://android-review.googlesource.com/167062 is the abandoned revert.

In addition, even if an overflow occurred, it would still require that "prctl(PR_CAPBSET_READ, 0, 0, 0, 0)" fail for this if condition to not be true. That would imply that CAP_CHOWN (capability #0) did not exist. I don't believe this has ever been true in the history of the Linux kernel...

(if you can write a unittest which exercises the "else" block if this test, I'd be curious to see it.  Maybe possible with seccomp? Dunno...)

