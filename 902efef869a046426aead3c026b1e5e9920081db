Revision: 902efef869a046426aead3c026b1e5e9920081db
Patch-set: 1
File: adb/daemon/main.cpp

60
Thu Apr 07 15:49:51 2016 +0000
Author: Nick Kralevich <1003966@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_74dee927
Bytes: 175
All of this code is ifdefed out on user builds, so the changes below only apply to userdebug/eng builds. None of the code you have below is even compiled on production builds.

96:30-96:42
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_f97e72ed
Bytes: 32
!drop, this is a C++ native bool

96:4-96:7
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_998d2663
Bytes: 29
EVENT_TYPE_INT is for int32_t

102:4-102:7
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_799a629c
Bytes: 63
EVENT_TYPE_INT is for int32_t, this will fail on BE64 compiles.

103
Thu Apr 07 15:49:51 2016 +0000
Author: Nick Kralevich <1003966@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_54dbe535
Bytes: 135
There's no way to restart adbd from a user build, so the only effect this has is to generate an event on every boot. This is pointless.

File: adb/set_verity_enable_state_service.cpp

91:4-91:7
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_34bbc1ea
Bytes: 7
int32_t

91:18-91:32
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_3985fa36
Bytes: 44
enable is enough, this is a C++ native bool.

101
Thu Apr 07 15:49:51 2016 +0000
Author: Nick Kralevich <1003966@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_74f709a0
Bytes: 219
This is a compile time constant, which is set to false on user builds. As a result, the code on lines 90-94 will never even be compiled on production builds. The only place this would show up is on userdebug/eng builds.

File: include/log/logd.h

48:0-49:16
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_b9790a06
Bytes: 157
Are you aware of #include <log/log.h> android_log_write_list* functions? It replaces all three of these in fact and is far more extensible regarding content.

File: liblog/logger_write.c

485:0-503:1
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_3492a17a
Bytes: 341
This needs to be deprecated, or enhanced to perform appropriate byte swapping based on type.

Suggestion given this is part of the API (audit?) is to use an inline function (can we with the API?) that uses android_log_write_list_* functions to compose the content, or to move this and its event compatriots as wrappers into log_event_write.c

515:4-515:26
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_d4a015ba
Bytes: 31
byte swapped on some arches :-(

519:4-519:27
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_14979d69
Bytes: 96
This needs to be byte swapped on some architectures to match the 'wire' format. get4LE == put4LE

527:0-545:1
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_79738224
Bytes: 140
This does not work on byte-swapped systems at all; you need a switch for type and perform the appropriate endianness landing of the content.

558:4-558:27
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_b4a6b1d1
Bytes: 28
byte swapped on some arches.

562:4-562:27
Thu Apr 07 15:32:33 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae9b108c_f49b1991
Bytes: 72
This needs to be byte swapped on some architectures, get4LE is == put4LE

