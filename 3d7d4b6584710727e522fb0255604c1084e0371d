Revision: 3d7d4b6584710727e522fb0255604c1084e0371d
Patch-set: 2
File: init/signal_handler.c

137
Tue Aug 07 07:14:23 2012 +0000
Author: Andrew Hsieh <1010186@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: AAAIFn////M=
Bytes: 59
what about nullifying act.sa_restorer?  Is it still needed?

137
Tue Aug 07 07:47:09 2012 +0000
Author: Chris Dearman <1003284@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAIFn////M=
UUID: AAAIEX///+s=
Bytes: 351
Tthe Linux manual page says that sa_restorer should not be referenced but it seems that the ARM kernel saves and restores it and the x86 actually uses it.

The MIPS struct sigaction does not have a sa_restorer field.
I think the best solution would be to use
  memset(act, 0 , sizeof(act));
to initialise the structure then set sa_handler and sa_flags

137
Tue Aug 14 22:25:08 2012 +0000
Author: Kenny Root <1002975@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAIEX///+s=
UUID: AAAIW3///Xw=
Bytes: 185
I seem to remember gdb uses sa_restorer for something that this appears it might break. Doing the memset(&act, 0, sizeof(act)); would be better than just removing this sa_restorer line.

137
Tue Aug 14 22:34:23 2012 +0000
Author: Dima Zavin <1000413@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: AAAIW3///Xw=
UUID: AAAIXH///Vk=
Bytes: 324
even if ppl do use sa_restorer, they have to set the SA_RESTORER flag in flags iirc (and that's what the arm kernel does), which we are not setting so I'm not sure how gdb can rely on that.

x86 doesn't seem to do anything with it from what I can tell. In fact the only arch for which the SA_RESTORER flag is defined is arm.

