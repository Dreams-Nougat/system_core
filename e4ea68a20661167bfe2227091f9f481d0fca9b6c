Revision: e4ea68a20661167bfe2227091f9f481d0fca9b6c
Patch-set: 3
File: init/builtins.cpp

123:4-123:11
Mon Jul 13 21:36:00 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 58987a8f_4241f209
Bytes: 191
EINTR is not listed as a possible return (?) in the documentation, but it does defer to reading the kernel source code ...

I am unsure if TEMP_FAILURE_RETRY makes sense, but it can not hurt?

123:4-123:11
Tue Jul 14 19:32:42 2015 +0000
Author: Yusuke Sato <1032760@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 58987a8f_4241f209
UUID: 9870321a_64894a74
Bytes: 10
Sure, done

138:4-138:8
Mon Jul 13 21:36:00 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 58987a8f_223eee93
Bytes: 43
ditto here, like umount2, EINTR not listed.

138:4-138:8
Tue Jul 14 19:32:42 2015 +0000
Author: Yusuke Sato <1032760@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 58987a8f_223eee93
UUID: 98975254_b25a98fb
Bytes: 4
Done

141:21-141:23
Mon Jul 13 21:36:00 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 187d22ed_c8404f09
Bytes: 7
#define

141:21-141:23
Tue Jul 14 19:32:42 2015 +0000
Author: Yusuke Sato <1032760@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 187d22ed_c8404f09
UUID: 58987a8f_a299defc
Bytes: 4
Done

142:17-142:60
Mon Jul 13 21:36:00 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 187d22ed_e83d1398
Bytes: 18
TEMP_FAILURE_RETRY

142:17-142:60
Tue Jul 14 19:32:42 2015 +0000
Author: Yusuke Sato <1032760@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 187d22ed_e83d1398
UUID: 78b0de09_1b9d9b6a
Bytes: 4
Done

151:0-154:37
Mon Jul 13 21:36:00 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 98975254_cfcb0141
Bytes: 18
TEMP_FAILURE_RETRY

151:0-154:37
Tue Jul 14 19:32:42 2015 +0000
Author: Yusuke Sato <1032760@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 98975254_cfcb0141
UUID: 9870321a_a46a6211
Bytes: 4
Done

File: libcutils/android_reboot.c

127:7-127:10
Mon Jul 13 21:36:00 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9870321a_643eaa79
Bytes: 133
#include <stdbool.h>

static bool remount_ro(void)

Advantage is also something like 'return false' and 'return cnt < 50;' is enough.

127:7-127:10
Tue Jul 14 19:32:42 2015 +0000
Author: Yusuke Sato <1032760@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9870321a_643eaa79
UUID: 9870321a_84bba62d
Bytes: 12
Thanks, done

134:0-139:14
Mon Jul 13 21:36:00 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 187d22ed_c8676fca
Bytes: 27
TEMP_FAILURE_RETRY on each.

134:0-139:14
Tue Jul 14 19:32:42 2015 +0000
Author: Yusuke Sato <1032760@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 187d22ed_c8676fca
UUID: 78b0de09_1b9c7bb5
Bytes: 521
Done, added TEMP_FAILURE_RETRY to open and write. For close, I'm not sure if EINTR handling is necessary.

If understand correctly, on multi-threaded environment, retrying close on EINTR could be dangerous for reasons mentioned at http://lwn.net/Articles/576478/ . Chrome which I used to work on doesn't seem to use HANDLE_EINTR for close either (https://code.google.com/p/chromium/codesearch#chromium/src/base/posix/eintr_wrapper.h&type=cs&l=13 ). Although init is single-threaded, let me use plain close() here for now.

143:40-143:42
Mon Jul 13 21:36:00 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 187d22ed_48745f79
Bytes: 52
#define, especially since it is now used twice here.

143:40-143:42
Tue Jul 14 19:32:42 2015 +0000
Author: Yusuke Sato <1032760@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 187d22ed_48745f79
UUID: 187d22ed_283acb55
Bytes: 4
Done

164:29-164:31
Mon Jul 13 21:36:00 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d8762a12_e67a9e2e
Bytes: 142
Do not make assumptions about length. What about #include <cutils/list.h> linked list? Useing a list will drop the need to pass length around.

164:29-164:31
Tue Jul 14 19:32:42 2015 +0000
Author: Yusuke Sato <1032760@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d8762a12_e67a9e2e
UUID: 98975254_73166fd7
Bytes: 16
Good idea, done.

