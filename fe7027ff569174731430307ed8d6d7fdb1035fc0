Revision: fe7027ff569174731430307ed8d6d7fdb1035fc0
Patch-set: 1
File: liblog/log_is_loggable.c

154:23-154:52
Sat Jan 30 00:46:57 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 548b02a3_86b7abf3
Bytes: 113
Something like this to deal with truncation:

strncmp(last_tag + 1, tag + 1, min(strlen(tag),sizeof(tag) - 1))-1)

154:23-154:53
Sat Jan 30 00:46:57 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 548b02a3_26a89799
Bytes: 130
need something to deal with truncation of tag to PROP_NAME_MAX, I'd like to see strncmp instead min(tag + 1, sizeof(last_tag - 1))

154:23-154:53
Sat Jan 30 00:52:35 2016 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 548b02a3_26a89799
UUID: 349a0eef_23a6c9dd
Bytes: 99
Since it is a single static buffer I could just make it longer than we expect a tag to usefully be.

154:23-154:53
Mon Feb 01 16:57:26 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 349a0eef_23a6c9dd
UUID: 9462dabe_2635087e
Bytes: 348
As it stands, it is already there then :-) however tags can get very very long in our uncontrolled Android environment and we still need a strncmp here to allow the truncated value from applications that do not show tag-length restraint to match to keep the churn down. I am sure I saw a tag that was >32 characters in length in our own logging ...

154:23-154:53
Tue Feb 02 20:39:31 2016 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9462dabe_2635087e
UUID: 9124acf4_0d20952a
Bytes: 333
strncmp(last_tag + 1, tag + 1, min(strlen(tag),sizeof(last_tag) - 1))-1) will change the behavior, it will match any tag that is a prefix of last_tag.  I think it needs:

  strncmp(last_tag + 1, tag + 1, sizeof(last_tag) - 2)

The -2 is to drop the first character (from last_tag + 1), and to drop the trailing null from last_tag.ï¿¼

154:23-154:53
Tue Feb 02 21:00:56 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9124acf4_0d20952a
UUID: 71c9f878_595d07fb
Bytes: 84
Agreed

(I must admit I had one of Sasha special before the first-round review :-) )

154:23-154:53
Wed Feb 03 02:27:07 2016 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 71c9f878_595d07fb
UUID: 5116b490_34e83e63
Bytes: 98
I switch to strncpy below so last_tag is not always null terminated, and sizeof(last_tag) - 1 here

154:23-154:53
Wed Feb 03 16:27:02 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5116b490_34e83e63
UUID: 11f7dc9a_453a6ea3
Bytes: 21
I'll buy that for a $

164:16-164:57
Sat Jan 30 00:46:57 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b486fe94_4f2cd96b
Bytes: 180
no man strlcpy, merde, does this make sure the last location is null terminated or not? would make a difference to above request to deal with truncation here with strncmp above ...

164:16-164:57
Sat Jan 30 00:52:35 2016 +0000
Author: Colin Cross <1002751@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b486fe94_4f2cd96b
UUID: 9489faaa_2e887794
Bytes: 106
strlcpy is bsd, https://www.freebsd.org/cgi/man.cgi?query=strlcpy&sektion=3
it guarantees null termination

164:16-164:57
Mon Feb 01 16:57:26 2016 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9489faaa_2e887794
UUID: 9489faaa_d9ca73c8
Bytes: 80
Thanks, replying to reviews with a phone can get combersome. strlcpy is perfect.

